server:
  port: 8880
spring:
  application:
    name: payment-consumer
  main:
    allow-bean-definition-overriding: true
  mvc:
    static-path-pattern: /**
    thymeleaf:
      cache: false
      encoding: utf-8
      mode: LEGACYHTML5
      prefix: classpath:/templates/
      servlet:
        content-type: text/html
      suffix: .html

eureka:
  client:
    #表示是否将自己注册进EurekaServer默认为true
    register-with-eureka: true
    #是否从EurekaServer抓取已有的注册信息，默认为true。单节点无所谓，集群必须设置为true才能配合ribbon使用 负载均衡
    fetch-registry: true
    service-url:
      #      defaultZone:  http://eureka7002.com:7002/eureka/,http://eureka7001.com:7001/eureka/
      defaultZone: http://127.0.0.1:7001/eureka
  instance:
    instance-id: consumer8080
    prefer-ip-address: true
    #    #eureka客户端发送心跳的时间间隔，默认30s
    lease-renewal-interval-in-seconds: 1
    #    #eureka服务端在收到最后一次心跳等待的时间上线，默认90s
    lease-expiration-duration-in-seconds: 2

ribbon:
  # 建立连接所用时间
  ReadTimeout: 5000
  # 建立连接后读取可用资源所用的时间
  ConnectTimeout: 5000

logging:
  level:
    # 选择具体接口的方法 的日志输出 级别为debug
    pers.mk.springcloud.service.PaymentFeignService: debug

